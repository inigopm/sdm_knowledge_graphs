
B.3 – Querying the Ontology (in English)

Query 1️: Reciprocal-citation pairs (“citation triangles”)

PREFIX ex: <http://example.org/research#>

SELECT ?paperA ?paperB
WHERE {
  ?paperA ex:cites ?paperB .
  ?paperB ex:cites ?paperA .
  FILTER (STR(?paperA) < STR(?paperB))   # keep each pair only once
}
LIMIT 20

Why it shows the value of the TBOX + reasoning:

TBOX leverage:
- The property ex:cites is defined with domain & range = ex:Paper.
- Even if the ABOX never types a resource explicitly as ex:Paper, GraphDB’s RDFS rules infer that type from the triple pattern.

Insightful output:
- Lists article pairs that cite each other—hints at close collaborations, academic debates, or “feedback loops” of influence.
- Doing this with plain SQL would require multiple joins and still miss resources lacking explicit types.

Query 2️: Most frequent keyword co-occurrences

PREFIX ex: <http://example.org/research#>

SELECT ?kw1 ?kw2
       (COUNT(DISTINCT ?paper) AS ?sharedPapers)
WHERE {
  ?paper ex:hasKeyword ?t1 , ?t2 .
  FILTER (?t1 != ?t2)

  ?t1 ex:title ?kw1 .
  ?t2 ex:title ?kw2 .

  FILTER (STR(?kw1) < STR(?kw2))          # avoid symmetric duplicates
}
GROUP BY ?kw1 ?kw2
ORDER BY DESC(?sharedPapers)
LIMIT 25

Why it exploits the ontology:

TBOX leverage:
- ex:hasKeyword is declared with range = ex:Topic.
- So every object of that property is automatically treated as a Topic instance—even when the ABOX never states rdf:type ex:Topic.
- That implicit typing makes it safe to query their ex:title.

Insightful output:
- Surfaces which research topics tend to appear together in the same papers—a quick way to detect thematic clusters or emerging cross-disciplinary trends.
